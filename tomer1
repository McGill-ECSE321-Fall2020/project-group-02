[1mdiff --git a/project-group-02-Backend/src/main/java/ca/mcgill/ecse321/projectgroup02/service/ProjectGroup02Service.java b/project-group-02-Backend/src/main/java/ca/mcgill/ecse321/projectgroup02/service/ProjectGroup02Service.java[m
[1mindex 024820a..ed4398c 100644[m
[1m--- a/project-group-02-Backend/src/main/java/ca/mcgill/ecse321/projectgroup02/service/ProjectGroup02Service.java[m
[1m+++ b/project-group-02-Backend/src/main/java/ca/mcgill/ecse321/projectgroup02/service/ProjectGroup02Service.java[m
[36m@@ -635,16 +635,27 @@[m [mpublic class ProjectGroup02Service {[m
     if (customer.getApplicationUser().getBalance() < (1 + taxPercentage) * totalPrice)[m
       throw new Exception("Insufficient funds");[m
 [m
[31m-    for (Item item : customer.getShoppingCart().getItem()) {[m
[31m-      removeFromShoppingCart(username, item.getName(), item.getArtist().getApplicationUser().getUsername());[m
[31m-      item.setInStock(false);[m
[31m-      addToBalance(item.getArtist().getApplicationUser(), (1 - commissionPercentage) * item.getPrice());[m
[31m-      addToBalance(artGallerySystem, commissionPercentage * item.getPrice());[m
[31m-      artistRepository.save(item.getArtist());[m
[31m-      applicationUserRepository.save(item.getArtist().getApplicationUser());[m
[31m-      order.getItem().add(item);[m
[31m-      itemRepository.save(item);[m
[32m+[m
[32m+[m[32m    ArrayList<Item> convertedItems = (ArrayList<Item>) toList(customer.getShoppingCart().getItem());[m
[32m+[m[41m    [m
[32m+[m[32m    for (Iterator<Item> it = convertedItems.iterator(); it.hasNext();) {[m
[32m+[m[41m    [m	[32m  Item item = it.next();[m
[32m+[m	[32m      removeFromShoppingCart(username, item.getName(), item.getArtist().getApplicationUser().getUsername());[m
[32m+[m	[32m      item.setInStock(false);[m
[32m+[m	[32m      addToBalance(item.getArtist().getApplicationUser(), (1 - commissionPercentage) * item.getPrice());[m
[32m+[m	[32m      addToBalance(artGallerySystem, commissionPercentage * item.getPrice());[m
[32m+[m	[32m      artistRepository.save(item.getArtist());[m
[32m+[m	[32m      applicationUserRepository.save(item.getArtist().getApplicationUser());[m
[32m+[m	[32m      order.getItem().add(item);[m
[32m+[m	[32m      itemRepository.save(item);[m
     }[m
[32m+[m[41m    [m
[32m+[m[32m    // Reconvert the converted items to a Set object[m
[32m+[m[32m    Set<Item> items = new HashSet<Item>(convertedItems);[m
[32m+[m[41m    [m
[32m+[m[32m    // Set the items to the customer's shopping cart[m
[32m+[m[32m    customer.getShoppingCart().setItem(items);[m
[32m+[m
 [m
     addToBalance(customer.getApplicationUser(), -(1 + taxPercentage) * totalPrice); // reduce customer's balance[m
 [m
