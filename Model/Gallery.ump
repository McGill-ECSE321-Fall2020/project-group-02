class Gallery {
  gallery 1 -- * Item items;
  gallery 1 -- 1 Address address;
  gallery 1 -- * Commission allCommissions;
  double totalBalance;
}

class Address {
  street;
  postalCode;
  province;
  country;
  city;
}

class User {
  user 1 --> 0..2 UserRole userRole;
  Date accountCreation;
  username;
  email;
  password;
  user * -- * Address gallery;
  phoneNumber;
  boolean loggedIn;
  users * -- 1 Gallery gallery;
}

// Abstract
class UserRole {
 abstract;
}

class Artist {
  isA UserRole;
  originStory;
}

class Delivery {
  enum DeliveryMethod { inStorePickup, homeDelivery }; 
    DeliveryMethod deliveryMethod;
    double deliveryPrice;
}

class Customer {
  isA UserRole;
  1 -- * PaymentCredentials paymentCredentials;
  1 -- 1 ShoppingCart shoppingCart;
}

class PaymentCredentials {
  paymentCredentials 1 -- 1 Address billingAddress;
  cardholderName;
  ccNumber;
  expirationDate;
  int cvc;
}

class ShoppingCart {
  shoppingCart 1 -- * Item items;
}

class Order {
  order 1 --1 PaymentCredentials paymentCredentials;
  order 1 -- 1 Customer buyer;
  order 1 -- * Item orderedItems;
  order 1 <@>- 1 Delivery deliveryMethod;
  order 1 <@>- 1 OrderConfirmation orderConfirmation;
  order 1 <@>- * Commission commission;
  int orderNumber;
  Date orderDate;
  double itemsPrice;
  double taxes;
  double totalPrice;
  boolean freeShipping;
}

class Collection {
  collection 1 - * Item items;
  description;
  name;
  numberOfItems;
}

class Item {
  name;
  images
  id;
  int height;
  int width;
  creations * -- 1 Artist creator;
  Date creationDate;
  desription;
  item 1 -- * Category categories;
  double price;
  Image[] images;
  double reducedPrice;
  boolean inStock;
  galleryItem * -- 1 Gallery gallery;
}

class Dimensions {
  double height;
  double width;
  double breadth;
}

class Category {
  name;
  Image collectionThumbnail;
}

class Commission {
  int commisionPercentage;
  double commissionTotal;
}

class ChatMessage {
  chatMessage 1 -- 1 User receiver;
  chatMessage 1 -- 1 User sender;
  Date sentDate;
  String message;
}

class OrderConfirmationEmail {
  String message;
  orderConfirmationEmail * -- 1 User receiver;
  orderConfirmationEmail 1 -- 1 Discount discountCode;
  orderConfirmationEmail 1 -- 1 Order order;
}

class Discount {
  code;
  boolean expired;
  Date expirationDate;
  boolean used;
}

class Wishlist {
  wishlist 1 -- * Item wishlistItems;
  wishlist 1 -- 1 User user;
}

class GiftCard {
  code;
  totalAmount;
}

class Guest {
  email;
  password;
  guest 1 --> 2 Address; addresses;
  phoneNumber;
  user * -- 1 Gallery gallery;
  guest 1 -- 1 PaymentCredentials paymentCredentials;
  guest 1 --> 1 ShoppingCart shoppingCart;
}